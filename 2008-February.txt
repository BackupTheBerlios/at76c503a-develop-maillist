From proski at gnu.org  Fri Feb 22 04:08:33 2008
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 21 Feb 2008 22:08:33 -0500
Subject: [at76c503a-develop] mac80211-enabled at76_usb is in wireless-testing
Message-ID: <1203649713.16556.15.camel@dv>

Hello!

The at76_usb driver converted to the mac80211 stack has appeared in the
wireless-testing repository (master branch).  It doesn't guarantee is
will appear in any particular version of the kernel, but if we make it
functional before the 2.6.25 release, it may be in 2.6.26.

This means that the wireless-testing repository becomes the official
location of the driver.  It can be fetched by the following command:

git-clone git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-testing.git

Please note that it will download about 410 megabytes of data because
git clones the full history on Linux.

All further patches should be done against wireless-testing.

My repository is still available, but I'm going to abandon it soon.  It
only include the at76_usb driver, so it's just a 3 Mb download:

git-clone http://git.80211libre.org/at76_usb.git

I'm going to ask at76_usb to be included into the compat-wireless
package once we have a minimally functioning driver.  That would provide
the driver with compatibility provisions for older kernels.

Whoever wanted to port the driver to the WPA-enabled firmware, it may be
time to start it now.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Fri Feb 22 06:00:50 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 22 Feb 2008 00:00:50 -0500
Subject: [at76c503a-develop] [PATCH 2/5] at76_usb: remove unneeded code
In-Reply-To: <20080222050044.11158.86655.stgit@dv.roinet.com>
References: <20080222050044.11158.86655.stgit@dv.roinet.com>
Message-ID: <20080222050049.11158.86314.stgit@dv.roinet.com>

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/at76_usb.c |    8 --------
 drivers/net/wireless/at76_usb.h |   13 -------------
 2 files changed, 0 insertions(+), 21 deletions(-)

diff --git a/drivers/net/wireless/at76_usb.c b/drivers/net/wireless/at76_usb.c
index cdc258e..95c911e 100644
--- a/drivers/net/wireless/at76_usb.c
+++ b/drivers/net/wireless/at76_usb.c
@@ -262,14 +262,6 @@ MODULE_DEVICE_TABLE(usb, dev_table);
 /* Supported rates of this hardware, bit 7 marks basic rates */
 static const u8 hw_rates[] = { 0x82, 0x84, 0x0b, 0x16 };
 
-/* Frequency of each channel in MHz */
-static const long channel_frequency[] = {
-	2412, 2417, 2422, 2427, 2432, 2437, 2442,
-	2447, 2452, 2457, 2462, 2467, 2472, 2484
-};
-
-#define NUM_CHANNELS ARRAY_SIZE(channel_frequency)
-
 static const char *const preambles[] = { "long", "short", "auto" };
 
 /* Firmware download */
diff --git a/drivers/net/wireless/at76_usb.h b/drivers/net/wireless/at76_usb.h
index 626becd..3cdade1 100644
--- a/drivers/net/wireless/at76_usb.h
+++ b/drivers/net/wireless/at76_usb.h
@@ -355,17 +355,6 @@ struct reg_domain {
 	u32 channel_map;	/* if bit N is set, channel (N+1) is allowed */
 };
 
-/* a rx data buffer to collect rx fragments */
-struct rx_data_buf {
-	u8 sender[ETH_ALEN];	/* sender address */
-	u16 seqnr;		/* sequence number */
-	u16 fragnr;		/* last fragment received */
-	unsigned long last_rx;	/* jiffies of last rx */
-	struct sk_buff *skb;	/* == NULL if entry is free */
-};
-
-#define NR_RX_DATA_BUF		8
-
 /* Data for one loaded firmware file */
 struct fwentry {
 	const char *const fwname;
@@ -472,6 +461,4 @@ struct at76_priv {
 /* the max padding size for tx in bytes (see calc_padding) */
 #define MAX_PADDING_SIZE	53
 
-#define MIN_FRAG_THRESHOLD 256
-
 #endif				/* _AT76_USB_H */


From proski at gnu.org  Fri Feb 22 06:00:44 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 22 Feb 2008 00:00:44 -0500
Subject: [at76c503a-develop] [PATCH 1/5] at76_usb: fix missing newlines in
	printk, improve some messages
Message-ID: <20080222050044.11158.86655.stgit@dv.roinet.com>

It's important to know which function failed.

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/at76_usb.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/at76_usb.c b/drivers/net/wireless/at76_usb.c
index 8db15bd..cdc258e 100644
--- a/drivers/net/wireless/at76_usb.c
+++ b/drivers/net/wireless/at76_usb.c
@@ -1645,7 +1645,7 @@ static struct fwentry *at76_load_firmware(struct usb_device *udev,
 			   fwe->fwname);
 		dev_printk(KERN_ERR, &udev->dev,
 			   "you may need to download the firmware from "
-			   "http://developer.berlios.de/projects/at76c503a/");
+			   "http://developer.berlios.de/projects/at76c503a/\n");
 		goto exit;
 	}
 
@@ -1885,7 +1885,7 @@ static int at76_join(struct at76_priv *priv)
 				    sizeof(struct at76_req_join));
 
 	if (ret < 0) {
-		printk(KERN_ERR "%s: CMD_JOIN failed: %d",
+		printk(KERN_ERR "%s: at76_set_card_command failed: %d\n",
 		       wiphy_name(priv->hw->wiphy), ret);
 		return 0;
 	}
@@ -1893,7 +1893,7 @@ static int at76_join(struct at76_priv *priv)
 	ret = at76_wait_completion(priv, CMD_JOIN);
 	at76_dbg(DBG_MAC80211, "%s: CMD_JOIN returned: 0x%02x", __func__, ret);
 	if (ret != CMD_STATUS_COMPLETE) {
-		printk(KERN_ERR "%s: CMD_JOIN failed: %d",
+		printk(KERN_ERR "%s: at76_wait_completion failed: %d\n",
 		       wiphy_name(priv->hw->wiphy), ret);
 		return 0;
 	}


From proski at gnu.org  Fri Feb 22 06:00:55 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 22 Feb 2008 00:00:55 -0500
Subject: [at76c503a-develop] [PATCH 3/5] at76_usb: add more MODULE_AUTHOR
	entries
In-Reply-To: <20080222050044.11158.86655.stgit@dv.roinet.com>
References: <20080222050044.11158.86655.stgit@dv.roinet.com>
Message-ID: <20080222050055.11158.50523.stgit@dv.roinet.com>

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/at76_usb.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/net/wireless/at76_usb.c b/drivers/net/wireless/at76_usb.c
index 95c911e..da531a3 100644
--- a/drivers/net/wireless/at76_usb.c
+++ b/drivers/net/wireless/at76_usb.c
@@ -2537,5 +2537,7 @@ MODULE_AUTHOR("Alex <alex at foogod.com>");
 MODULE_AUTHOR("Nick Jones");
 MODULE_AUTHOR("Balint Seeber <n0_5p4m_p13453 at hotmail.com>");
 MODULE_AUTHOR("Pavel Roskin <proski at gnu.org>");
+MODULE_AUTHOR("Guido Guenther <agx at sigxcpu.org>");
+MODULE_AUTHOR("Kalle Valo <kalle.valo at iki.fi>");
 MODULE_DESCRIPTION(DRIVER_DESC);
 MODULE_LICENSE("GPL");


From proski at gnu.org  Fri Feb 22 06:01:01 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 22 Feb 2008 00:01:01 -0500
Subject: [at76c503a-develop] [PATCH 4/5] at76_usb: reindent,
	reorder initializers for readability
In-Reply-To: <20080222050044.11158.86655.stgit@dv.roinet.com>
References: <20080222050044.11158.86655.stgit@dv.roinet.com>
Message-ID: <20080222050101.11158.37111.stgit@dv.roinet.com>

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/at76_usb.c |  221 +++++++++++++++++----------------------
 1 files changed, 98 insertions(+), 123 deletions(-)

diff --git a/drivers/net/wireless/at76_usb.c b/drivers/net/wireless/at76_usb.c
index da531a3..33fa026 100644
--- a/drivers/net/wireless/at76_usb.c
+++ b/drivers/net/wireless/at76_usb.c
@@ -110,15 +110,15 @@ static int at76_debug = DBG_DEFAULTS;
 static struct mutex fw_mutex;
 
 static struct fwentry firmwares[] = {
-	[0] = {""},
-	[BOARD_503_ISL3861] = {"atmel_at76c503-i3861.bin"},
-	[BOARD_503_ISL3863] = {"atmel_at76c503-i3863.bin"},
-	[BOARD_503] = {"atmel_at76c503-rfmd.bin"},
-	[BOARD_503_ACC] = {"atmel_at76c503-rfmd-acc.bin"},
-	[BOARD_505] = {"atmel_at76c505-rfmd.bin"},
-	[BOARD_505_2958] = {"atmel_at76c505-rfmd2958.bin"},
-	[BOARD_505A] = {"atmel_at76c505a-rfmd2958.bin"},
-	[BOARD_505AMX] = {"atmel_at76c505amx-rfmd.bin"},
+	[0] = { "" },
+	[BOARD_503_ISL3861] = { "atmel_at76c503-i3861.bin" },
+	[BOARD_503_ISL3863] = { "atmel_at76c503-i3863.bin" },
+	[BOARD_503] = { "atmel_at76c503-rfmd.bin" },
+	[BOARD_503_ACC] = { "atmel_at76c503-rfmd-acc.bin" },
+	[BOARD_505] = { "atmel_at76c505-rfmd.bin" },
+	[BOARD_505_2958] = { "atmel_at76c505-rfmd2958.bin" },
+	[BOARD_505A] = { "atmel_at76c505a-rfmd2958.bin" },
+	[BOARD_505AMX] = { "atmel_at76c505amx-rfmd.bin" },
 };
 
 #define USB_DEVICE_DATA(__ops)	.driver_info = (kernel_ulong_t)(__ops)
@@ -128,133 +128,133 @@ static struct usb_device_id dev_table[] = {
 	 * at76c503-i3861
 	 */
 	/* Generic AT76C503/3861 device */
-	{USB_DEVICE(0x03eb, 0x7603), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x03eb, 0x7603), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Linksys WUSB11 v2.1/v2.6 */
-	{USB_DEVICE(0x066b, 0x2211), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x066b, 0x2211), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Netgear MA101 rev. A */
-	{USB_DEVICE(0x0864, 0x4100), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0864, 0x4100), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Tekram U300C / Allnet ALL0193 */
-	{USB_DEVICE(0x0b3b, 0x1612), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0b3b, 0x1612), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* HP HN210W J7801A */
-	{USB_DEVICE(0x03f0, 0x011c), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x03f0, 0x011c), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Sitecom/Z-Com/Zyxel M4Y-750 */
-	{USB_DEVICE(0x0cde, 0x0001), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0cde, 0x0001), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Dynalink/Askey WLL013 (intersil) */
-	{USB_DEVICE(0x069a, 0x0320), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x069a, 0x0320), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* EZ connect 11Mpbs Wireless USB Adapter SMC2662W v1 */
-	{USB_DEVICE(0x0d5c, 0xa001), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0d5c, 0xa001), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* BenQ AWL300 */
-	{USB_DEVICE(0x04a5, 0x9000), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x04a5, 0x9000), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Addtron AWU-120, Compex WLU11 */
-	{USB_DEVICE(0x05dd, 0xff31), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x05dd, 0xff31), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Intel AP310 AnyPoint II USB */
-	{USB_DEVICE(0x8086, 0x0200), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x8086, 0x0200), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Dynalink L11U */
-	{USB_DEVICE(0x0d8e, 0x7100), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0d8e, 0x7100), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* Arescom WL-210, FCC id 07J-GL2411USB */
-	{USB_DEVICE(0x0d8e, 0x7110), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x0d8e, 0x7110), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* I-O DATA WN-B11/USB */
-	{USB_DEVICE(0x04bb, 0x0919), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x04bb, 0x0919), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/* BT Voyager 1010 */
-	{USB_DEVICE(0x069a, 0x0821), USB_DEVICE_DATA(BOARD_503_ISL3861)},
+	{ USB_DEVICE(0x069a, 0x0821), USB_DEVICE_DATA(BOARD_503_ISL3861) },
 	/*
 	 * at76c503-i3863
 	 */
 	/* Generic AT76C503/3863 device */
-	{USB_DEVICE(0x03eb, 0x7604), USB_DEVICE_DATA(BOARD_503_ISL3863)},
+	{ USB_DEVICE(0x03eb, 0x7604), USB_DEVICE_DATA(BOARD_503_ISL3863) },
 	/* Samsung SWL-2100U */
-	{USB_DEVICE(0x055d, 0xa000), USB_DEVICE_DATA(BOARD_503_ISL3863)},
+	{ USB_DEVICE(0x055d, 0xa000), USB_DEVICE_DATA(BOARD_503_ISL3863) },
 	/*
 	 * at76c503-rfmd
 	 */
 	/* Generic AT76C503/RFMD device */
-	{USB_DEVICE(0x03eb, 0x7605), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x03eb, 0x7605), USB_DEVICE_DATA(BOARD_503) },
 	/* Dynalink/Askey WLL013 (rfmd) */
-	{USB_DEVICE(0x069a, 0x0321), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x069a, 0x0321), USB_DEVICE_DATA(BOARD_503) },
 	/* Linksys WUSB11 v2.6 */
-	{USB_DEVICE(0x077b, 0x2219), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x077b, 0x2219), USB_DEVICE_DATA(BOARD_503) },
 	/* Network Everywhere NWU11B */
-	{USB_DEVICE(0x077b, 0x2227), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x077b, 0x2227), USB_DEVICE_DATA(BOARD_503) },
 	/* Netgear MA101 rev. B */
-	{USB_DEVICE(0x0864, 0x4102), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x0864, 0x4102), USB_DEVICE_DATA(BOARD_503) },
 	/* D-Link DWL-120 rev. E */
-	{USB_DEVICE(0x2001, 0x3200), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x2001, 0x3200), USB_DEVICE_DATA(BOARD_503) },
 	/* Actiontec 802UAT1, HWU01150-01UK */
-	{USB_DEVICE(0x1668, 0x7605), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x1668, 0x7605), USB_DEVICE_DATA(BOARD_503) },
 	/* AirVast W-Buddie WN210 */
-	{USB_DEVICE(0x03eb, 0x4102), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x03eb, 0x4102), USB_DEVICE_DATA(BOARD_503) },
 	/* Dick Smith Electronics XH1153 802.11b USB adapter */
-	{USB_DEVICE(0x1371, 0x5743), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x1371, 0x5743), USB_DEVICE_DATA(BOARD_503) },
 	/* CNet CNUSB611 */
-	{USB_DEVICE(0x1371, 0x0001), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x1371, 0x0001), USB_DEVICE_DATA(BOARD_503) },
 	/* FiberLine FL-WL200U */
-	{USB_DEVICE(0x1371, 0x0002), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x1371, 0x0002), USB_DEVICE_DATA(BOARD_503) },
 	/* BenQ AWL400 USB stick */
-	{USB_DEVICE(0x04a5, 0x9001), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x04a5, 0x9001), USB_DEVICE_DATA(BOARD_503) },
 	/* 3Com 3CRSHEW696 */
-	{USB_DEVICE(0x0506, 0x0a01), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x0506, 0x0a01), USB_DEVICE_DATA(BOARD_503) },
 	/* Siemens Santis ADSL WLAN USB adapter WLL 013 */
-	{USB_DEVICE(0x0681, 0x001b), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x0681, 0x001b), USB_DEVICE_DATA(BOARD_503) },
 	/* Belkin F5D6050, version 2 */
-	{USB_DEVICE(0x050d, 0x0050), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x050d, 0x0050), USB_DEVICE_DATA(BOARD_503) },
 	/* iBlitzz, BWU613 (not *B or *SB) */
-	{USB_DEVICE(0x07b8, 0xb000), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x07b8, 0xb000), USB_DEVICE_DATA(BOARD_503) },
 	/* Gigabyte GN-WLBM101 */
-	{USB_DEVICE(0x1044, 0x8003), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x1044, 0x8003), USB_DEVICE_DATA(BOARD_503) },
 	/* Planex GW-US11S */
-	{USB_DEVICE(0x2019, 0x3220), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x2019, 0x3220), USB_DEVICE_DATA(BOARD_503) },
 	/* Internal WLAN adapter in h5[4,5]xx series iPAQs */
-	{USB_DEVICE(0x049f, 0x0032), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x049f, 0x0032), USB_DEVICE_DATA(BOARD_503) },
 	/* Corega Wireless LAN USB-11 mini */
-	{USB_DEVICE(0x07aa, 0x0011), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x07aa, 0x0011), USB_DEVICE_DATA(BOARD_503) },
 	/* Corega Wireless LAN USB-11 mini2 */
-	{USB_DEVICE(0x07aa, 0x0018), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x07aa, 0x0018), USB_DEVICE_DATA(BOARD_503) },
 	/* Uniden PCW100 */
-	{USB_DEVICE(0x05dd, 0xff35), USB_DEVICE_DATA(BOARD_503)},
+	{ USB_DEVICE(0x05dd, 0xff35), USB_DEVICE_DATA(BOARD_503) },
 	/*
 	 * at76c503-rfmd-acc
 	 */
 	/* SMC2664W */
-	{USB_DEVICE(0x083a, 0x3501), USB_DEVICE_DATA(BOARD_503_ACC)},
+	{ USB_DEVICE(0x083a, 0x3501), USB_DEVICE_DATA(BOARD_503_ACC) },
 	/* Belkin F5D6050, SMC2662W v2, SMC2662W-AR */
-	{USB_DEVICE(0x0d5c, 0xa002), USB_DEVICE_DATA(BOARD_503_ACC)},
+	{ USB_DEVICE(0x0d5c, 0xa002), USB_DEVICE_DATA(BOARD_503_ACC) },
 	/*
 	 * at76c505-rfmd
 	 */
 	/* Generic AT76C505/RFMD */
-	{USB_DEVICE(0x03eb, 0x7606), USB_DEVICE_DATA(BOARD_505)},
+	{ USB_DEVICE(0x03eb, 0x7606), USB_DEVICE_DATA(BOARD_505) },
 	/*
 	 * at76c505-rfmd2958
 	 */
 	/* Generic AT76C505/RFMD, OvisLink WL-1130USB */
-	{USB_DEVICE(0x03eb, 0x7613), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x03eb, 0x7613), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* Fiberline FL-WL240U */
-	{USB_DEVICE(0x1371, 0x0014), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x1371, 0x0014), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* CNet CNUSB-611G */
-	{USB_DEVICE(0x1371, 0x0013), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x1371, 0x0013), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* Linksys WUSB11 v2.8 */
-	{USB_DEVICE(0x1915, 0x2233), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x1915, 0x2233), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* Xterasys XN-2122B, IBlitzz BWU613B/BWU613SB */
-	{USB_DEVICE(0x12fd, 0x1001), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x12fd, 0x1001), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* Corega WLAN USB Stick 11 */
-	{USB_DEVICE(0x07aa, 0x7613), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x07aa, 0x7613), USB_DEVICE_DATA(BOARD_505_2958) },
 	/* Microstar MSI Box MS6978 */
-	{USB_DEVICE(0x0db0, 0x1020), USB_DEVICE_DATA(BOARD_505_2958)},
+	{ USB_DEVICE(0x0db0, 0x1020), USB_DEVICE_DATA(BOARD_505_2958) },
 	/*
 	 * at76c505a-rfmd2958
 	 */
 	/* Generic AT76C505A device */
-	{USB_DEVICE(0x03eb, 0x7614), USB_DEVICE_DATA(BOARD_505A)},
+	{ USB_DEVICE(0x03eb, 0x7614), USB_DEVICE_DATA(BOARD_505A) },
 	/* Generic AT76C505AS device */
-	{USB_DEVICE(0x03eb, 0x7617), USB_DEVICE_DATA(BOARD_505A)},
+	{ USB_DEVICE(0x03eb, 0x7617), USB_DEVICE_DATA(BOARD_505A) },
 	/* Siemens Gigaset USB WLAN Adapter 11 */
-	{USB_DEVICE(0x1690, 0x0701), USB_DEVICE_DATA(BOARD_505A)},
+	{ USB_DEVICE(0x1690, 0x0701), USB_DEVICE_DATA(BOARD_505A) },
 	/*
 	 * at76c505amx-rfmd
 	 */
 	/* Generic AT76C505AMX device */
-	{USB_DEVICE(0x03eb, 0x7615), USB_DEVICE_DATA(BOARD_505AMX)},
-	{}
+	{ USB_DEVICE(0x03eb, 0x7615), USB_DEVICE_DATA(BOARD_505AMX) },
+	{ }
 };
 
 MODULE_DEVICE_TABLE(usb, dev_table);
@@ -663,15 +663,15 @@ static struct reg_domain const *at76_get_reg_domain(u16 code)
 {
 	int i;
 	static struct reg_domain const fd_tab[] = {
-		{0x10, "FCC (USA)", 0x7ff},	/* ch 1-11 */
-		{0x20, "IC (Canada)", 0x7ff},	/* ch 1-11 */
-		{0x30, "ETSI (most of Europe)", 0x1fff},	/* ch 1-13 */
-		{0x31, "Spain", 0x600},	/* ch 10-11 */
-		{0x32, "France", 0x1e00},	/* ch 10-13 */
-		{0x40, "MKK (Japan)", 0x2000},	/* ch 14 */
-		{0x41, "MKK1 (Japan)", 0x3fff},	/* ch 1-14 */
-		{0x50, "Israel", 0x3fc},	/* ch 3-9 */
-		{0x00, "<unknown>", 0xffffffff}	/* ch 1-32 */
+		{ 0x10, "FCC (USA)", 0x7ff },	/* ch 1-11 */
+		{ 0x20, "IC (Canada)", 0x7ff },	/* ch 1-11 */
+		{ 0x30, "ETSI (most of Europe)", 0x1fff },	/* ch 1-13 */
+		{ 0x31, "Spain", 0x600 },	/* ch 10-11 */
+		{ 0x32, "France", 0x1e00 },	/* ch 10-13 */
+		{ 0x40, "MKK (Japan)", 0x2000 },	/* ch 14 */
+		{ 0x41, "MKK1 (Japan)", 0x3fff },	/* ch 1-14 */
+		{ 0x50, "Israel", 0x3fc },	/* ch 3-9 */
+		{ 0x00, "<unknown>", 0xffffffff }	/* ch 1-32 */
 	};
 
 	/* Last entry is fallback for unknown domain code */
@@ -1566,7 +1566,7 @@ static void at76_rx_tasklet(unsigned long param)
 	struct urb *urb = (struct urb *)param;
 	struct at76_priv *priv = urb->context;
 	struct at76_rx_buffer *buf;
-	struct ieee80211_rx_status rx_status = {0};
+	struct ieee80211_rx_status rx_status = { 0 };
 
 	if (priv->device_unplugged) {
 		at76_dbg(DBG_DEVSTART, "device unplugged");
@@ -1597,8 +1597,7 @@ static void at76_rx_tasklet(unsigned long param)
 	skb_pull(priv->rx_skb, AT76_RX_HDRLEN);
 	skb_trim(priv->rx_skb, le16_to_cpu(buf->wlength));
 	at76_dbg_dump(DBG_RX_DATA, priv->rx_skb->data,
-		      priv->rx_skb->len, "RX: len=%d",
-		      priv->rx_skb->len);
+		      priv->rx_skb->len, "RX: len=%d", priv->rx_skb->len);
 
 	rx_status.ssi = buf->rssi;
 	rx_status.flag |= RX_FLAG_DECRYPTED;
@@ -1725,7 +1724,7 @@ static void at76_mac80211_tx_callback(struct urb *urb)
 }
 
 static int at76_mac80211_tx(struct ieee80211_hw *hw, struct sk_buff *skb,
-		  struct ieee80211_tx_control *control)
+			    struct ieee80211_tx_control *control)
 {
 	struct at76_priv *priv = hw->priv;
 	struct at76_tx_buffer *tx_buffer = priv->bulk_out_buffer;
@@ -1829,7 +1828,7 @@ static void at76_mac80211_stop(struct ieee80211_hw *hw)
 }
 
 static int at76_add_interface(struct ieee80211_hw *hw,
-			     struct ieee80211_if_init_conf *conf)
+			      struct ieee80211_if_init_conf *conf)
 {
 	struct at76_priv *priv = hw->priv;
 	int ret = 0;
@@ -1854,7 +1853,7 @@ exit:
 }
 
 static void at76_remove_interface(struct ieee80211_hw *hw,
-				 struct ieee80211_if_init_conf *conf)
+				  struct ieee80211_if_init_conf *conf)
 {
 	at76_dbg(DBG_MAC80211, "%s()", __func__);
 }
@@ -1904,8 +1903,7 @@ static void at76_dwork_hw_scan(struct work_struct *work)
 	mutex_lock(&priv->mtx);
 
 	ret = at76_get_cmd_status(priv->udev, CMD_SCAN);
-	at76_dbg(DBG_MAC80211, "%s: CMD_SCAN status 0x%02x",
-		 __func__, ret);
+	at76_dbg(DBG_MAC80211, "%s: CMD_SCAN status 0x%02x", __func__, ret);
 
 	/* FIXME: add maximum time for scan to complete */
 
@@ -1926,7 +1924,6 @@ exit:
 	mutex_unlock(&priv->mtx);
 }
 
-
 static int at76_hw_scan(struct ieee80211_hw *hw, u8 *ssid, size_t len)
 {
 	struct at76_priv *priv = hw->priv;
@@ -1934,8 +1931,7 @@ static int at76_hw_scan(struct ieee80211_hw *hw, u8 *ssid, size_t len)
 	int ret;
 
 	at76_dbg(DBG_MAC80211, "%s():", __func__);
-	at76_dbg_dump(DBG_MAC80211, ssid, len,
-		      "ssid %zd bytes:", len);
+	at76_dbg_dump(DBG_MAC80211, ssid, len, "ssid %zd bytes:", len);
 
 	mutex_lock(&priv->mtx);
 
@@ -1954,8 +1950,7 @@ static int at76_hw_scan(struct ieee80211_hw *hw, u8 *ssid, size_t len)
 	scan.international_scan = 0;
 
 	at76_dbg(DBG_MAC80211, "%s: sending CMD_SCAN", __func__);
-	ret = at76_set_card_command(priv->udev, CMD_SCAN, &scan,
-				    sizeof(scan));
+	ret = at76_set_card_command(priv->udev, CMD_SCAN, &scan, sizeof(scan));
 
 	if (ret < 0) {
 		err("CMD_SCAN failed: %d", ret);
@@ -2099,7 +2094,6 @@ static int at76_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
 	return 0;
 }
 
-
 static const struct ieee80211_ops at76_ops = {
 	.tx = at76_mac80211_tx,
 	.add_interface = at76_add_interface,
@@ -2208,45 +2202,27 @@ static int at76_alloc_urbs(struct at76_priv *priv,
 }
 
 static struct ieee80211_rate at76_rates[] = {
-	{ .bitrate = 10,
-	  .hw_value = TX_RATE_1MBIT, },
-	{ .bitrate = 20,
-	  .hw_value = TX_RATE_2MBIT, },
-	{ .bitrate = 55,
-	  .hw_value = TX_RATE_5_5MBIT, },
-	{ .bitrate = 110,
-	  .hw_value = TX_RATE_11MBIT, },
+	{ .bitrate = 10, .hw_value = TX_RATE_1MBIT, },
+	{ .bitrate = 20, .hw_value = TX_RATE_2MBIT, },
+	{ .bitrate = 55, .hw_value = TX_RATE_5_5MBIT, },
+	{ .bitrate = 110, .hw_value = TX_RATE_11MBIT, },
 };
 
 static struct ieee80211_channel at76_channels[] = {
-	{ .hw_value = 1,
-	  .center_freq = 2412},
-	{ .hw_value = 2,
-	  .center_freq = 2417},
-	{ .hw_value = 3,
-	  .center_freq = 2422},
-	{ .hw_value = 4,
-	  .center_freq = 2427},
-	{ .hw_value = 5,
-	  .center_freq = 2432},
-	{ .hw_value = 6,
-	  .center_freq = 2437},
-	{ .hw_value = 7,
-	  .center_freq = 2442},
-	{ .hw_value = 8,
-	  .center_freq = 2447},
-	{ .hw_value = 9,
-	  .center_freq = 2452},
-	{ .hw_value = 10,
-	  .center_freq = 2457},
-	{ .hw_value = 11,
-	  .center_freq = 2462},
-	{ .hw_value = 12,
-	  .center_freq = 2467},
-	{ .hw_value = 13,
-	  .center_freq = 2472},
-	{ .hw_value = 14,
-	  .center_freq = 2484}
+	{ .center_freq = 2412, .hw_value = 1 },
+	{ .center_freq = 2417, .hw_value = 2 },
+	{ .center_freq = 2422, .hw_value = 3 },
+	{ .center_freq = 2427, .hw_value = 4 },
+	{ .center_freq = 2432, .hw_value = 5 },
+	{ .center_freq = 2437, .hw_value = 6 },
+	{ .center_freq = 2442, .hw_value = 7 },
+	{ .center_freq = 2447, .hw_value = 8 },
+	{ .center_freq = 2452, .hw_value = 9 },
+	{ .center_freq = 2457, .hw_value = 10 },
+	{ .center_freq = 2462, .hw_value = 11 },
+	{ .center_freq = 2467, .hw_value = 12 },
+	{ .center_freq = 2472, .hw_value = 13 },
+	{ .center_freq = 2484, .hw_value = 14 }
 };
 
 static struct ieee80211_supported_band at76_supported_band = {
@@ -2256,7 +2232,6 @@ static struct ieee80211_supported_band at76_supported_band = {
 	.n_bitrates = ARRAY_SIZE(at76_rates),
 };
 
-
 /* Register network device and initialize the hardware */
 static int at76_init_new_device(struct at76_priv *priv,
 				struct usb_interface *interface)


From proski at gnu.org  Fri Feb 22 06:01:07 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 22 Feb 2008 00:01:07 -0500
Subject: [at76c503a-develop] [PATCH 5/5] at76_usb: make the driver depend on
	MAC80211
In-Reply-To: <20080222050044.11158.86655.stgit@dv.roinet.com>
References: <20080222050044.11158.86655.stgit@dv.roinet.com>
Message-ID: <20080222050107.11158.49112.stgit@dv.roinet.com>

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/Kconfig |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/Kconfig b/drivers/net/wireless/Kconfig
index 8f935e0..8d368b4 100644
--- a/drivers/net/wireless/Kconfig
+++ b/drivers/net/wireless/Kconfig
@@ -459,7 +459,7 @@ config PCMCIA_ATMEL
 
 config USB_ATMEL
 	tristate "Atmel at76c503/at76c505/at76c505a USB cards"
-	depends on WLAN_80211 && USB
+	depends on MAC80211 && WLAN_80211 && USB
 	select FW_LOADER
 	---help---
 	  Enable support for USB Wireless devices using Atmel at76c503,


From milan.plzik at gmail.com  Fri Feb 22 09:35:40 2008
From: milan.plzik at gmail.com (Milan Plzik)
Date: Fri, 22 Feb 2008 09:35:40 +0100
Subject: [at76c503a-develop] mac80211-enabled at76_usb is in
	wireless-testing
In-Reply-To: <1203649713.16556.15.camel@dv>
References: <1203649713.16556.15.camel@dv>
Message-ID: <1203669341.10378.3.camel@localhost>


On ?t, 2008-02-21 at 22:08 -0500, Pavel Roskin wrote:
> Hello!

  Hello :)

> 
> The at76_usb driver converted to the mac80211 stack has appeared in the
> wireless-testing repository (master branch).  It doesn't guarantee is
> will appear in any particular version of the kernel, but if we make it
> functional before the 2.6.25 release, it may be in 2.6.26.
> 
> This means that the wireless-testing repository becomes the official
> location of the driver.  It can be fetched by the following command:
> 
> git-clone git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-testing.git
> 
> Please note that it will download about 410 megabytes of data because
> git clones the full history on Linux.

  Uhh, isn't there any possibility to create snapshot of only portion of
the repository -- not only for developers, but also if any user would
like to test GIT snapshot, it would be quite convenient to download just
required files.

> 
> All further patches should be done against wireless-testing.

  Ok, will do.

> 
> My repository is still available, but I'm going to abandon it soon.  It
> only include the at76_usb driver, so it's just a 3 Mb download:
> 
> git-clone http://git.80211libre.org/at76_usb.git
> 
> I'm going to ask at76_usb to be included into the compat-wireless
> package once we have a minimally functioning driver.  That would provide
> the driver with compatibility provisions for older kernels.
> 
> Whoever wanted to port the driver to the WPA-enabled firmware, it may be
> time to start it now.

  I wanted to do that, and it fits perfectly to my schedule, as I'm
finishing some time-consuming jobs and can start to work on this. Thank
you for announcement.

> 

	Milan



From agx at sigxcpu.org  Sat Feb 23 14:43:57 2008
From: agx at sigxcpu.org (Guido =?iso-8859-1?Q?G=FCnther?=)
Date: Sat, 23 Feb 2008 14:43:57 +0100
Subject: [at76c503a-develop] mac80211-enabled at76_usb is
	in	wireless-testing
In-Reply-To: <1203669341.10378.3.camel@localhost>
References: <1203649713.16556.15.camel@dv> <1203669341.10378.3.camel@localhost>
Message-ID: <20080223134357.GA19312@bogon.ms20.nix>

Hi Milan,
On Fri, Feb 22, 2008 at 09:35:40AM +0100, Milan Plzik wrote:
>   Uhh, isn't there any possibility to create snapshot of only portion of
> the repository -- not only for developers, but also if any user would
> like to test GIT snapshot, it would be quite convenient to download just
> required files.
You can use git-clone's --depth option.
 -- Guido


From proski at gnu.org  Mon Feb 25 05:55:36 2008
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 24 Feb 2008 23:55:36 -0500
Subject: [at76c503a-develop] mac80211-enabled at76_usb is in
	wireless-testing
In-Reply-To: <1203669341.10378.3.camel@localhost>
References: <1203649713.16556.15.camel@dv> <1203669341.10378.3.camel@localhost>
Message-ID: <20080224235536.yeb82wf1wc84wsg8@webmail.spamcop.net>

Quoting Milan Plzik <milan.plzik at gmail.com>:

>   Uhh, isn't there any possibility to create snapshot of only portion of
> the repository -- not only for developers, but also if any user would
> like to test GIT snapshot, it would be quite convenient to download just
> required files.

That's precisely the purpose of compat-wireless.

But the current driver is just not ready for prime time.  I tried it  
with WEP, and it was slow to associate, and the ping turnaround was  
2-4 seconds.  It's like there is a sleep somewhere, of the device is  
reset for every packet.  Also, the ad-hoc mode is missing.

Once we address those problems, I'll ask the compat-wireless  
maintainer to include at76_usb.

>   I wanted to do that, and it fits perfectly to my schedule, as I'm
> finishing some time-consuming jobs and can start to work on this. Thank
> you for announcement.

I've sent some patches, including one that reformats a lot of code, so  
you may have some conflicts when merging your changes.  I think it  
should be trivial, I just want to keep you informed.

-- 
Regards,
Pavel Roskin


From tim at buttersideup.com  Fri Feb 22 10:45:49 2008
From: tim at buttersideup.com (Tim Small)
Date: Fri, 22 Feb 2008 09:45:49 +0000
Subject: [at76c503a-develop] mac80211-enabled at76_usb is
	in	wireless-testing
In-Reply-To: <1203669341.10378.3.camel@localhost>
References: <1203649713.16556.15.camel@dv> <1203669341.10378.3.camel@localhost>
Message-ID: <47BE99CD.4080402@buttersideup.com>

Milan Plzik wrote:

>> git-clone git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-testing.git
>>
>> Please note that it will download about 410 megabytes of data because
>> git clones the full history on Linux.
>>     
>
>   Uhh, isn't there any possibility to create snapshot of only portion of
> the repository -- not only for developers, but also if any user would
> like to test GIT snapshot, it would be quite convenient to download just
> required files.
>   


 From the git-clone manual page:

--depth <depth>

    Create a /shallow/ clone with a history truncated to the specified
    number of revisions. A shallow repository has a number of
    limitations (you cannot clone or fetch from it, nor push from nor
    into it), but is adequate if you are only interested in the recent
    history of a large project with a long history, and would want to
    send in fixes as patches.


I don't believe you can just clone a subset of the repository (i.e. just 
a portion of the tree), BICBW.

Tim.


